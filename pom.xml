<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--
    Use the following commands to:

    - check for plugin updates:                       mvn versions:display-plugin-updates
    - check for dependency updates:                   mvn versions:display-dependency-updates
    - generate project report without deployment:     mvn clean compile site
    -->

    <groupId>at.rovo</groupId>
    <artifactId>jdrum-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Disk Repository with Update Management (DRUM)</name>
    <description>Drum divides data received via its check, checkUpdate or update method into a number of buckets and
        stores them efficiently with the help of bucket sort into bucket disk files. If a disk files gets full all the
        data is stored and compared with the data in a general backend data store and updated if required.
    </description>

    <url>https://github.com/RovoMe/JDrum</url>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://raw.githubusercontent.com/RovoMe/JDrum/master/LICENSE</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <modules>
        <module>jdrum-commons</module>
        <module>jdrum-datastore-base</module>
        <module>jdrum-datastore-simple</module>
        <module>jdrum</module>
    </modules>

    <scm>
        <url>https://github.com/RovoMe/JDrum.git</url>
        <connection>scm:git:https://github.com/RovoMe/JDrum.git</connection>
        <developerConnection>scm:git:https://github.com/RovoMe/JDrum.git</developerConnection>
        <tag>master</tag>
    </scm>

    <distributionManagement>
        <site>
            <id>github</id>
            <url>scm:git:https://github.com/RovoMe/JDrum.git</url>
        </site>
    </distributionManagement>

    <developers>
        <developer>
            <id>RovoMe</id>
            <name>Roman Vottner</name>
            <roles>
                <role>lead</role>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/RovoMe/JDrum/issues</url>
    </issueManagement>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <maven.compiler.release>8</maven.compiler.release>

        <slf4j.version>1.8.0-beta4</slf4j.version>
        <logback.version>1.3.0-alpha4</logback.version>
        <junit.version>5.5.0-M1</junit.version> <!-- 5.4.1 works also -->
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Logging -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <!-- Dependency for @GuardedBy annotations recommended by Java Concurrency in Practice -->
            <dependency>
                <groupId>net.jcip</groupId>
                <artifactId>jcip-annotations</artifactId>
                <version>1.0</version>
            </dependency>

            <!-- Test dependencies-->

            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest</artifactId>
                <version>2.1</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Removes generated files during build-time -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- Handles the copying of project resources to the target directory -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- compiler settings -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                    <configuration>
                        <release>8</release>
                    </configuration>
                </plugin>
                <!-- Generates a Java archive file from the generated classes including test-jar archives -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.1.1</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>test-jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Adds source files in a separate JAR file -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.0.1</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Copies the generated artifacts to the local maven repository -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <!-- Deploys the artifact to a remote repository during deploy phase -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <!-- Generates a site for the project based on defined reports in the POM
                     Prevent the site plugin from deploying to the scm url
                     Usage: mvn clean compile site
                -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7.1</version>
                    <executions>
                        <execution>
                            <id>stage-for-scm-publish</id>
                            <phase>post-site</phase>
                            <goals>
                                <goal>stage</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-deploy</id>
                            <phase>none</phase>
                        </execution>
                    </executions>
                </plugin>
                <!-- Publish modified content to SCM (GitHub)
                     Usage: mvn -Preporting site site:stage
                            mvn scm-publish:publish-scm
                -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-scm-publish-plugin</artifactId>
                    <version>3.0.0</version>
                    <configuration>
                        <scmBranch>gh-pages</scmBranch>
                        <pubScmUrl>scm:git:https://github.com/RovoMe/JDrum.git</pubScmUrl>
                    </configuration>
                    <executions>
                        <execution>
                            <id>scm-publish</id>
                            <phase>site-deploy</phase>
                            <goals>
                                <goal>publish-scm</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Surefire is a test framework project. -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M3</version>
                    <!-- Allow reflection access to all third party libraries -->
                    <configuration>
                        <argLine>
                            --illegal-access=permit
                        </argLine>
                    </configuration>
                </plugin>
                <!-- Failsafe is used to run integration tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.0.0-M3</version>
                    <!-- Allow reflection access to all third party libraries -->
                    <configuration>
                        <argLine>
                            --illegal-access=permit
                        </argLine>
                    </configuration>
                </plugin>
                <!-- Specifies minimum version of Maven in order to work on this project -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.0.0-M2</version>
                    <executions>
                        <execution>
                            <id>enforce-maven</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireMavenVersion>
                                        <version>3.1.1</version>
                                    </requireMavenVersion>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- Manage versions of artifacts within the POM

                     List plugin versions used which have updates available:
                     usage: mvn versions:display-plugin-updates

                     List dependency versions which have updated versions available
                     usage: mvn versions:display-dependency-updates
                -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.7</version>
                    <configuration>
                        <generateBackupPoms>false</generateBackupPoms>
                    </configuration>
                </plugin>
                <!-- Generate javadoc -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.1.0</version>
                    <configuration>
                        <source>8</source>
                        <show>protected</show>
                        <failOnWarnings>false</failOnWarnings>
                        <release>8</release>
                        <javadocVersion>8</javadocVersion>
                        <stylesheet>java</stylesheet>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <!-- Generates reports information about the project -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>3.0.0</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>index</report>
                            <report>dependency-info</report>
                            <report>issue-management</report>
                            <report>scm</report>
                            <report>licenses</report>
                            <report>distribution-management</report>
                            <report>team</report>
                            <report>summary</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <!-- Generate Javadoc while reporting -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.1.0</version>
                <inherited>true</inherited>
                <configuration>
                    <source>8</source>
                    <show>protected</show>
                    <failOnWarnings>false</failOnWarnings>
                    <release>8</release>
                    <javadocVersion>8</javadocVersion>
                    <stylesheet>java</stylesheet>
                </configuration>
                <reportSets>
                    <reportSet>
                        <id>html</id>
                        <reports>
                            <report>javadoc</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <!-- Generates a report on known bugs found on analyzing the project code -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>3.1.11</version>
            </plugin>
            <!-- Generate surefire reports -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>3.0.0-M3</version>
                <configuration>
                    <showSuccess>true</showSuccess>
                    <outputDirectory>${basedir}/target/site</outputDirectory>
                    <linkXRef>true</linkXRef>
                </configuration>
            </plugin>
            <!-- Add cross-references from failed tests to the line number in the source code -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>
            <!-- Generates a changes report based on entries found in src/changes/changes.xml -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-changes-plugin</artifactId>
                <version>2.12.1</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>changes-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

</project>
